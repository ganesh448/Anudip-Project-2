package miniProject2;

import java.util.ArrayList;

public class BusinessLead extends BusinessEmployee {
    private ArrayList<Accountant> team = new ArrayList<>();
    private double bonusBudget;
    private int headCount;

    public BusinessLead(String name) {
        super(name);
        this.baseSalary = getBaseSalary() * 2;
        this.headCount = 10;
    }

    public boolean hasHeadCount() {
        return team.size() < headCount;
    }

    public boolean addReport(Accountant e, TechnicalLead supportTeam) {
        if (hasHeadCount()) {
            team.add(e);
            e.setManager(this);
            bonusBudget += e.getBaseSalary() * 1.1;
            e.supportTeam(supportTeam);
            supportTeam.setAccountantSupport(e);
            return true;
        } else {
            return false;
        }
    }

    public boolean requestBonus(Employee e, double bonus) {
        if (bonus <= bonusBudget) {
            bonusBudget -= bonus;
            e.setBonus(e.getBonus() + bonus);
            return true;
        } else {
            return false;
        }
    }

    public boolean approveBonus(Employee e, double bonus) {
        for (Accountant accountant : team) {
            if (accountant.getTeamSupported() == e.getManager() && accountant.approveBonus(bonus)) {
                e.setBonus(e.getBonus() + bonus);
                accountant.setBonusBudget(accountant.getBonusBudget() - bonus);
                return true;
            }
        }
        return false;
    }

    public String getTeamStatus() {
        if (team.isEmpty()) {
            return employeeStatus() + " and no direct reports yet";
        } else {
            StringBuilder teamStatus = new StringBuilder();
            for (Accountant accountant : team) {
                teamStatus.append(accountant.employeeStatus()).append("\n");
            }
            return employeeStatus() + " and is managing: \n" + teamStatus.toString();
        }
    }
}
